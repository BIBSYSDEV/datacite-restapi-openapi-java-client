/*
 * REST API
 * The REST API is used for all API interactions with DataCite services.
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@datacite.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.unit.nva.doi.datacite.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DoiDataAttributesTypes
 */
@JsonPropertyOrder({
  DoiDataAttributesTypes.JSON_PROPERTY_RESOURCE_TYPE_GENERAL,
  DoiDataAttributesTypes.JSON_PROPERTY_RESOURCE_TYPE,
  DoiDataAttributesTypes.JSON_PROPERTY_SCHEMA_ORG,
  DoiDataAttributesTypes.JSON_PROPERTY_BIBTEX,
  DoiDataAttributesTypes.JSON_PROPERTY_CITEPROC,
  DoiDataAttributesTypes.JSON_PROPERTY_RIS
})

public class DoiDataAttributesTypes {
  public static final String JSON_PROPERTY_RESOURCE_TYPE_GENERAL = "resourceTypeGeneral";
  private String resourceTypeGeneral;

  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resourceType";
  private String resourceType;

  public static final String JSON_PROPERTY_SCHEMA_ORG = "schemaOrg";
  private String schemaOrg;

  public static final String JSON_PROPERTY_BIBTEX = "bibtex";
  private String bibtex;

  public static final String JSON_PROPERTY_CITEPROC = "citeproc";
  private String citeproc;

  public static final String JSON_PROPERTY_RIS = "ris";
  private String ris;


  public DoiDataAttributesTypes resourceTypeGeneral(String resourceTypeGeneral) {
    
    this.resourceTypeGeneral = resourceTypeGeneral;
    return this;
  }

   /**
   * Get resourceTypeGeneral
   * @return resourceTypeGeneral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_GENERAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResourceTypeGeneral() {
    return resourceTypeGeneral;
  }


  public void setResourceTypeGeneral(String resourceTypeGeneral) {
    this.resourceTypeGeneral = resourceTypeGeneral;
  }


  public DoiDataAttributesTypes resourceType(String resourceType) {
    
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResourceType() {
    return resourceType;
  }


  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public DoiDataAttributesTypes schemaOrg(String schemaOrg) {
    
    this.schemaOrg = schemaOrg;
    return this;
  }

   /**
   * Get schemaOrg
   * @return schemaOrg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEMA_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchemaOrg() {
    return schemaOrg;
  }


  public void setSchemaOrg(String schemaOrg) {
    this.schemaOrg = schemaOrg;
  }


  public DoiDataAttributesTypes bibtex(String bibtex) {
    
    this.bibtex = bibtex;
    return this;
  }

   /**
   * Get bibtex
   * @return bibtex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BIBTEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBibtex() {
    return bibtex;
  }


  public void setBibtex(String bibtex) {
    this.bibtex = bibtex;
  }


  public DoiDataAttributesTypes citeproc(String citeproc) {
    
    this.citeproc = citeproc;
    return this;
  }

   /**
   * Get citeproc
   * @return citeproc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CITEPROC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCiteproc() {
    return citeproc;
  }


  public void setCiteproc(String citeproc) {
    this.citeproc = citeproc;
  }


  public DoiDataAttributesTypes ris(String ris) {
    
    this.ris = ris;
    return this;
  }

   /**
   * Get ris
   * @return ris
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRis() {
    return ris;
  }


  public void setRis(String ris) {
    this.ris = ris;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DoiDataAttributesTypes doiDataAttributesTypes = (DoiDataAttributesTypes) o;
    return Objects.equals(this.resourceTypeGeneral, doiDataAttributesTypes.resourceTypeGeneral) &&
        Objects.equals(this.resourceType, doiDataAttributesTypes.resourceType) &&
        Objects.equals(this.schemaOrg, doiDataAttributesTypes.schemaOrg) &&
        Objects.equals(this.bibtex, doiDataAttributesTypes.bibtex) &&
        Objects.equals(this.citeproc, doiDataAttributesTypes.citeproc) &&
        Objects.equals(this.ris, doiDataAttributesTypes.ris);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceTypeGeneral, resourceType, schemaOrg, bibtex, citeproc, ris);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DoiDataAttributesTypes {\n");
    sb.append("    resourceTypeGeneral: ").append(toIndentedString(resourceTypeGeneral)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    schemaOrg: ").append(toIndentedString(schemaOrg)).append("\n");
    sb.append("    bibtex: ").append(toIndentedString(bibtex)).append("\n");
    sb.append("    citeproc: ").append(toIndentedString(citeproc)).append("\n");
    sb.append("    ris: ").append(toIndentedString(ris)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

